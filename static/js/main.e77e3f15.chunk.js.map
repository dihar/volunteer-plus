{"version":3,"sources":["img/profile.png","vk-connect.js","constants.js","stores/app-store.js","panels/Catalog.js","panels/Profile.js","panels/MyProjects.js","components/TabsPanel/config.js","components/TabsPanel/index.js","panels/Main.js","components/PanelHeaderSimple/index.js","components/Messages/index.js","panels/Project.js","panels/ProjectDetail.js","panels/Partials.js","panels/CheckList.js","panels/ProjectDetailOnly.js","panels/Form.js","components/Alert/index.js","App.js","index.js"],"names":["module","exports","extendedConnect","connect","eventsHeap","process","REACT_APP_MOCK","connectMock","sendPromise","method","params","Promise","resolve","send","subscribe","eventData","detail","type","data","endsWith","replace","undefined","TABS","VIEWS","STATUSES","initStore","activeTab","activeView","alert","user","projects","users","participants","activeProject","setActiveTab","_","payload","setActiveView","setAlert","setState","setTimeout","setUser","setActiveProject","debug","useStore","store","Catalog","id","onClick","map","project","key","before","image","src","description","shortDescription","onProjectClick","expandable","title","Profile","className","profile","alt","MyProjects","fetchedUser","orgProjects","filter","admin","partProjects","includes","Fragment","tabs","TabsPanel","vertical","theme","tab","selected","Main","useState","size","popout","setPopout","useEffect","a","fetchData","noShadow","activePanel","PanelHeaderSimple","children","onBack","platform","usePlatform","left","IOS","addon","Messages","active","setActive","mess","messagesData","messagesAllData","style","maxHeight","overflow","message","i","avatar","name","messages","text","j","time","placeholder","Project","routeFactory","target","status","bottomContent","level","disabled","photos","ProjectDetail","Partials","CheckList","toggleTask","task","tasks","forEach","taskI","complete","onChange","checked","ProjectDetailOnly","isActive","event","stopPropagation","push","Form","top","blueBackground","backgroundColor","Alert","Boolean","layout","onClose","snackbar","fill","width","height","App","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e77e3f15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.062e623f.png\";","import connect from '@vkontakte/vk-connect';\nimport connectMock from '@vkontakte/vkui-connect-mock';\n\nlet extendedConnect = connect;\nconst eventsHeap = {};\n\nconst subscriber = (eventData) => {\n    const { detail } = eventData;\n    const { type, data } = detail;\n\n    if (type && type.endsWith('Result')) {\n        const method = type.replace(/Result$/, '');\n\n        if (eventsHeap[method]) {\n            eventsHeap[method](data);\n            eventsHeap[method] = undefined;\n        }\n    }\n};\n\nif (process.env.REACT_APP_MOCK === 'true') {\n    extendedConnect = {\n        ...connectMock,\n        sendPromise: function(method, params) {\n            return new Promise((resolve) => {\n                eventsHeap[method] = resolve;\n                extendedConnect.send(method, params);\n            });\n        }\n    }\n\n    extendedConnect.subscribe(subscriber);\n} else {\n    extendedConnect = connect;\n}\n\nexport default extendedConnect;\n","export const TABS = {\n    catalog: 'catalog',\n    myProject: 'myProject',\n    profile: 'profile'\n};\n\nexport const VIEWS = {\n    main: 'main',\n    project: 'project',\n    projectDetail: 'projectDetail',\n    projectDetailOnly: 'projectDetailOnly',\n    partials: 'partials',\n    checkList: 'checkList',\n    form: 'form'\n};\n\nexport const STATUSES = {\n    participant: 'participant',\n    admin: 'admin',\n    notMember: 'notMember'\n};\n","import initStore from 'lemon-state';\nimport data from './data.json';\nimport { TABS, VIEWS } from '../constants';\n\nexport const { store, useStore } =  initStore({\n    activeTab: TABS.catalog,\n    activeView: VIEWS.main,\n    alert: null,\n    user: {},\n    projects: data.projects,\n    users: data.participants,\n    activeProject: null\n}, {\n    setActiveTab: (_, payload) => ({\n        activeTab: payload\n    }),\n    setActiveView: (_, payload) => ({\n        activeView: payload\n    }),\n    setAlert: ({ setState }, payload) => {\n        setTimeout(() => setState({ alert: null }), 3000);\n        return { alert: payload };\n    },\n    setUser: (_, payload) => ({ user: payload }),\n    setActiveProject: (_, payload) => ({ activeProject: payload })\n}, {\n    debug: true\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport { VIEWS } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst Catalog = ({ id }) => {\n\tconst { setActiveView, projects, setActiveProject } = useStore();\n\tconst onProjectClick = (project) => {\n\t\tsetActiveProject(project);\n\t\tsetActiveView(VIEWS.projectDetailOnly);\n\t};\n\tconst onNewClick = () => {\n\t\tsetActiveView(VIEWS.form);\n\t};\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<Group>\n\t\t\t\t<CellButton onClick={onNewClick}>Добавить новый проект</CellButton>\n\t\t\t</Group>\n\t\t\t<List>\n\t\t\t\t{projects.map(project => (\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tkey={project.id}\n\t\t\t\t\t\tbefore={project.image ? <Avatar src={project.image}/> : null}\n\t\t\t\t\t\tdescription={project.shortDescription}\n\t\t\t\t\t\tonClick={() => onProjectClick(project)}\n\t\t\t\t\t\texpandable\n\t\t\t\t\t>\n\t\t\t\t\t\t{project.title}\n\t\t\t\t\t</Cell>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Panel>\n\t);\n};\n\nCatalog.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Catalog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport profile from '../img/profile.png';\n\nconst Profile = ({ id }) => (\n\t<Panel id={id}>\n\t\t<img className=\"profile-image\" src={profile} alt=\"profile\" />\n\t</Panel>\n);\n\nProfile.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport { VIEWS } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst MyProjects = ({ id, fetchedUser }) => {\n\tconst { setActiveView, projects, setActiveProject, user } = useStore();\n\tconst onProjectClick = (project) => () => {\n\t\tsetActiveProject(project);\n\t\tsetActiveView(VIEWS.project);\n\t};\n\tconst orgProjects = projects.filter(project => project.admin === user.id);\n\tconst partProjects = projects.filter(project => project.admin !== user.id && project.participants.includes(user.id));\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t{fetchedUser &&\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Group title='Организатор'>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{orgProjects.map(project => (\n\t\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t\tkey={project.title}\n\t\t\t\t\t\t\t\t\tbefore={project.image ? <Avatar src={project.image}/> : null}\n\t\t\t\t\t\t\t\t\tdescription={project.shortDescription}\n\t\t\t\t\t\t\t\t\tonClick={onProjectClick(project)}\n\t\t\t\t\t\t\t\t\texpandable\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{project.title}\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Group>\n\t\t\t\t\t<Group title='Участник'>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{partProjects.map(project => (\n\t\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t\tkey={project.title}\n\t\t\t\t\t\t\t\t\tbefore={project.image ? <Avatar src={project.image}/> : null}\n\t\t\t\t\t\t\t\t\tdescription={project.shortDescription}\n\t\t\t\t\t\t\t\t\tonClick={onProjectClick(project)}\n\t\t\t\t\t\t\t\t\texpandable\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{project.title}\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Group>\n\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</Panel>\n\t);\n};\n\nMyProjects.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default MyProjects;\n","import { TABS } from '../../constants';\n\nexport const tabs = [\n    {\n        title: 'Каталог',\n        id: TABS.catalog\n    },\n    {\n        title: 'Мои проекты',\n        id: TABS.myProject\n    },\n    {\n        title: 'Профиль',\n        id: TABS.profile\n    }\n];\n","import React from 'react';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport { useStore } from '../../stores/app-store';\nimport { tabs } from './config';\n\nexport const TabsPanel = () => {\n    const { activeTab, setActiveTab} = useStore();\n\n    return (\n        <FixedLayout vertical=\"top\">\n            <Tabs theme=\"header\" type=\"buttons\">\n                <HorizontalScroll>\n                    {tabs.map(tab => (\n                        <TabsItem\n                            key={tab.id}\n                            onClick={() => setActiveTab(tab.id)}\n                            selected={activeTab === tab.id}\n                        >\n                            {tab.title}\n                        </TabsItem>\n                    ))}\n                </HorizontalScroll>\n            </Tabs>\n        </FixedLayout>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport connect from '../vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { TABS, VIEWS } from '../constants';\nimport Catalog from './Catalog';\nimport Profile from './Profile';\nimport MyProjects from './MyProjects';\nimport { TabsPanel } from '../components/TabsPanel';\nimport { useStore } from '../stores/app-store';\nimport './styles.css';\n\nconst Main = () => {\n\tconst { activeTab, setUser, user } = useStore();\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            user.id = 10;\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, [setUser]);\n\n\treturn (\n\t\t<Panel id={VIEWS.main}>\n            <PanelHeader noShadow>ВолонтёрПлюс</PanelHeader>\n            <TabsPanel />\n            <div className='hack-panel'>\n                <View activePanel={activeTab} popout={popout}>\n                    <Catalog id={TABS.catalog} fetchedUser={user}/>\n                    <MyProjects id={TABS.myProject} fetchedUser={user}/>\n                    <Profile id={TABS.profile}/>\n                </View>\n            </div>\n\t\t</Panel>\n\t);\n}\n\nexport default Main;\n\n","import React from 'react';\nimport { usePlatform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\n\nconst PanelHeaderSimple = ({ children, onBack }) => {\n    const platform = usePlatform();\n    return (\n        <PanelHeader\n            theme=\"light\"\n            left={<HeaderButton onClick={onBack}>{platform === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}\n            addon={<HeaderButton onClick={onBack}>Назад</HeaderButton>}\n        >\n            {children}\n        </PanelHeader>\n    );\n};\n\nexport default PanelHeaderSimple;\n","import React, { Fragment, useState } from 'react';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport messagesData from './data.json';\nimport messagesAllData from './dataMess.json';\nimport './styles.css';\n\nconst Messages = () => {\n    const [active, setActive] = useState('dial');\n    const mess = active === 'messages' ? messagesData : messagesAllData;\n\n    return (\n        <Fragment>\n            <Group>\n                <Cell>\n                    <Tabs type=\"buttons\">\n                        <TabsItem\n                            onClick={() => setActive('dial')}\n                            selected={active === 'dial'}\n                        >\n                            Общий чат\n                        </TabsItem>\n                        <TabsItem\n                            onClick={() => setActive('messages')}\n                            selected={active === 'messages'}\n                        >\n                            По задаче\n                        </TabsItem>\n                        <TabsItem\n                            onClick={() => setActive('private')}\n                            selected={active === 'private'}\n                        >\n                            Личный чат\n                        </TabsItem>\n                    </Tabs>\n                </Cell>\n                <div style={{ maxHeight: '300px', overflow: 'auto' }}>\n                    {mess.map((message, i) => (\n                        <Fragment key={i}>\n                            <Cell\n                                size=\"m\"\n                                description={message.description}\n                                before={<Avatar src={message.avatar}/>}\n                            >\n                                {message.name}\n                            </Cell>\n                            {message.messages.map((text, j) => (\n                                <Cell key={j}><div className=\"message-text\">{text}</div></Cell>\n                            ))}\n                            <Cell><div className=\"message-time\">{message.time}</div></Cell>\n                        </Fragment>\n                    ))}\n                </div>\n                <Cell><Input type=\"text\" placeholder=\"Ответить...\"/></Cell>\n                <Cell><Button>Отправить</Button></Cell>\n            </Group>\n        </Fragment>\n    );\n};\n\nexport default Messages;\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport UsersStack from '@vkontakte/vkui/dist/components/UsersStack/UsersStack';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport PanelHeaderSimple from '../components/PanelHeaderSimple';\nimport Messages from '../components/Messages';\nimport { VIEWS, STATUSES} from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst Project = () => {\n    const { setActiveView, activeProject, setActiveProject, user } = useStore();\n    const routeFactory = (target) => () => {\n        setActiveView(target);\n        if (target === VIEWS.main) {\n            setTimeout(() => {\n                setActiveProject(null);\n            }, 500);\n        }\n    };\n    if (!activeProject) {\n        return null;\n    }\n    let status = activeProject.participants.includes(user.id) ? STATUSES.participant : STATUSES.notMember;\n    status = activeProject.admin === user.id ? STATUSES.admin : status;\n\n\n\treturn (\n\t\t<Panel id={VIEWS.project}>\n            <PanelHeaderSimple onBack={routeFactory(VIEWS.main)}>Проект</PanelHeaderSimple>\n            <Group>\n                <Cell\n                    expandable\n                    size=\"l\"\n                    description={activeProject.shortDescription}\n                    before={<Avatar src={activeProject.image} />}\n                    onClick={routeFactory(VIEWS.projectDetail)}\n                    bottomContent={<Button level=\"commerce\" disabled>{status === STATUSES.admin ? 'Вы администратор' : 'Вы участник'}</Button>}\n                >\n                    {activeProject.title}\n                </Cell>\n            </Group>\n            <Group>\n                <UsersStack\n                    photos={[\n                        'https://sun9-6.userapi.com/c846121/v846121540/195e4d/17NeSTKMR1o.jpg?ava=1',\n                        'https://sun9-30.userapi.com/c845017/v845017447/1773bb/Wyfyi8-7e5A.jpg?ava=1',\n                        'https://sun9-25.userapi.com/c849432/v849432217/18ad61/0UFtoEhCsgA.jpg?ava=1'\n                    ]}\n                    onClick={routeFactory(VIEWS.partials)}\n                >12 участников</UsersStack>\n            </Group>\n            <Group>\n                <Cell\n                    expandable\n                    size=\"l\"\n                    description=\"Выполнено 4 из 9 заданий\"\n                    onClick={routeFactory(VIEWS.checkList)}\n                >\n                    Задачи проекта\n                </Cell>\n            </Group>\n            <Messages />\n\t\t</Panel>\n\t);\n}\n\nexport default Project;\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Icon24Document from '@vkontakte/icons/dist/24/document';\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport PanelHeaderSimple from '../components/PanelHeaderSimple';\nimport { VIEWS } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst ProjectDetail = () => {\n    const { setActiveView, activeProject } = useStore();\n    const onBack = () => {\n        setActiveView(VIEWS.project);\n    };\n\n\treturn (\n\t\t<Panel id={VIEWS.projectDetail}>\n            <PanelHeaderSimple onBack={onBack}>Описание</PanelHeaderSimple>\n            <Header>\n                {activeProject.title}\n            </Header>\n            <Group>\n                <Cell\n                    size=\"l\"\n                    description={activeProject.shortDescription}\n                    before={<Avatar src={activeProject.image} size={80} />}\n                >\n                    {activeProject.title}\n                </Cell>\n            </Group>\n            <Group>\n                <Div>\n                    {activeProject.description}\n                </Div>\n            </Group>\n            <Group title=\"Документация\">\n                <List>\n                    <Cell before={<Icon24Document />} onClick={() => {}}>Основные требования</Cell>\n                    <Cell before={<Icon24Info />} onClick={() => {}}>Для справки</Cell>\n                </List>\n            </Group>\n\t\t</Panel>\n\t);\n}\n\nexport default ProjectDetail;\n\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport PanelHeaderSimple from '../components/PanelHeaderSimple';\nimport { VIEWS } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst Partials = () => {\n    const { setActiveView } = useStore();\n    const onBack = () => {\n        setActiveView(VIEWS.project);\n    };\n\n\treturn (\n\t\t<Panel id={VIEWS.partials}>\n            <PanelHeaderSimple onBack={onBack}>Учавствуют в мероприятии</PanelHeaderSimple>\n            <Group>\n\t\t\t\t<CellButton>Добавить нового участника</CellButton>\n\t\t\t</Group>\n            <Group>\n                <List>\n                    <Cell\n                        expandable\n                        description=\"Люблю помогать старикам\"\n                        before={<Avatar src=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\" size={80} />}\n                    >\n                        Харин Дмитрий\n                    </Cell>\n                    <Cell\n                        expandable\n                        description=\"Больше всего нравится уборка\"\n                        before={<Avatar src=\"https://sun9-30.userapi.com/c845017/v845017447/1773bb/Wyfyi8-7e5A.jpg?ava=1\" size={80} />}\n                    >\n                        Петрова Ирина\n                    </Cell>\n                    <Cell\n                        expandable\n                        description=\"Готов встретить гостей\"\n                        before={<Avatar src=\"https://sun9-25.userapi.com/c849432/v849432217/18ad61/0UFtoEhCsgA.jpg?ava=1\" size={80} />}\n                    >\n                        Хромов Алексей\n                    </Cell>\n                </List>\n            </Group>\n\t\t</Panel>\n\t);\n}\n\nexport default Partials;\n\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport UsersStack from '@vkontakte/vkui/dist/components/UsersStack/UsersStack';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox';\nimport PanelHeaderSimple from '../components/PanelHeaderSimple';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { VIEWS } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst CheckList = () => {\n    const { setActiveView, activeProject, setActiveProject } = useStore();\n    const onBack = () => {\n        setActiveView(VIEWS.project);\n    };\n    const toggleTask = (task) => () => {\n        activeProject.tasks.forEach(taskI => {\n            if (task.description === taskI.description && task.title === taskI.title) {\n                taskI.complete = !taskI.complete;\n            }\n        });\n        setActiveProject({ ...activeProject });\n    };\n\n\treturn (\n\t\t<Panel id={VIEWS.checkList}>\n            <PanelHeaderSimple onBack={onBack}>Список заданий</PanelHeaderSimple>\n            {activeProject.tasks.map(task => (\n                <Group key={`${task.title}-${task.description}`}>\n                    <Cell\n                        size=\"m\"\n                        description={task.description}\n                        before={<Checkbox onChange={toggleTask(task)} checked={task.complete} />}\n                    >\n                        {task.title}\n                    </Cell>\n                    <Cell>\n                        <UsersStack\n                            photos={[\n                                'https://sun9-19.userapi.com/c851232/v851232757/fb949/4rDdDHqGglQ.jpg?ava=1',\n                            ]}\n                        >Ответственный Николай Журавлёв</UsersStack>\n                    </Cell>\n                </Group>\n            ))}\n\t\t</Panel>\n\t);\n}\n\nexport default CheckList;\n\n","import React, { useEffect } from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Icon24Document from '@vkontakte/icons/dist/24/document';\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport PanelHeaderSimple from '../components/PanelHeaderSimple';\nimport { VIEWS, STATUSES } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst ProjectDetailOnly = () => {\n    const { setActiveView, activeProject, setActiveProject, user } = useStore();\n    const onBack = () => {\n        setActiveView(VIEWS.main);\n    };\n    let status = activeProject.participants.includes(user.id) ? STATUSES.participant : STATUSES.notMember;\n    status = activeProject.admin === user.id ? STATUSES.admin : status;\n\n    const onSetStatus = (event) => {\n        event.stopPropagation();\n        activeProject.participants.push(user.id);\n        setActiveProject({ ...activeProject });\n    };\n    const isActive = status !== STATUSES.notMember;\n    useEffect(() => () => setActiveProject(null), [setActiveProject]);\n\n\treturn (\n\t\t<Panel id={VIEWS.projectDetailOnly}>\n            <PanelHeaderSimple onBack={onBack}>Описание</PanelHeaderSimple>\n            <Header>\n                {activeProject.title}\n            </Header>\n            <Group>\n                <Cell\n                    size=\"l\"\n                    description={activeProject.shortDescription}\n                    before={<Avatar src={activeProject.image} size={80} />}\n                    bottomContent={isActive ? (\n                        <Button level=\"commerce\" disabled>{status === STATUSES.admin ? 'Вы администратор' : 'Вы участник'}</Button>\n                     ) : (\n                        <Button onClick={onSetStatus}>Присоединиться к проекту</Button>\n                     )}\n                >\n                    {activeProject.title}\n                </Cell>\n            </Group>\n            <Group>\n                <Div>\n                    {activeProject.description}\n                </Div>\n            </Group>\n            <Group title=\"Документация\">\n                <List>\n                    <Cell before={<Icon24Document />} onClick={() => {}}>Основные требования</Cell>\n                    <Cell before={<Icon24Info />} onClick={() => {}}>Для справки</Cell>\n                </List>\n            </Group>\n\t\t</Panel>\n\t);\n}\n\nexport default ProjectDetailOnly;\n\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport PanelHeaderSimple from '../components/PanelHeaderSimple';\nimport { VIEWS } from '../constants';\nimport { useStore } from '../stores/app-store';\n\nconst Form = () => {\n    const { setActiveView, setAlert} = useStore();\n    const onBack = () => {\n        setActiveView(VIEWS.main);\n    };\n    const onSend = () => {\n        setAlert('Новое мероприятие создано');\n        onBack();\n    };\n\n\treturn (\n\t\t<Panel id={VIEWS.form}>\n            <PanelHeaderSimple onBack={onBack}>Создание мероприятия</PanelHeaderSimple>\n            <FormLayout>\n                <Input\n                    type=\"text\"\n                    top=\"Название\"\n                    name=\"title\"\n                />\n                <Input\n                    type=\"text\"\n                    top=\"Короткое описание\"\n                    name=\"short\"\n                />\n                <Input\n                    type=\"text\"\n                    top=\"Полное описание\"\n                    name=\"short\"\n                />\n                <Button onClick={onSend} size=\"xl\">Создать</Button>\n            </FormLayout>\n\t\t</Panel>\n\t);\n}\n\nexport default Form;\n","import React from 'react';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon16Done from '@vkontakte/icons/dist/24/done';\nimport { useStore } from '../../stores/app-store';\n\nconst blueBackground = {\n    backgroundColor: 'var(--accent)'\n};\n\nconst Alert = () => {\n    const { alert } = useStore();\n\n    return Boolean(alert) && (\n        <Snackbar\n            layout=\"vertical\"\n            onClose={() => this.setState({ snackbar: null })}\n            before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n        >\n            {alert}\n      </Snackbar>\n    );\n};\n\nexport default Alert;\n","import React, { useEffect, Fragment } from 'react';\nimport connect from './vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Main from './panels/Main';\nimport Project from './panels/Project';\nimport ProjectDetail from './panels/ProjectDetail';\nimport Partials from './panels/Partials';\nimport CheckList from './panels/CheckList';\nimport ProjectDetailOnly from './panels/ProjectDetailOnly';\nimport Form from './panels/Form';\nimport { VIEWS } from './constants';\nimport { useStore } from './stores/app-store';\nimport Alert from './components/Alert';\n\nconst App = () => {\n\tconst { activeView } = useStore();\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<View activePanel={activeView}>\n\t\t\t\t<Main id={VIEWS.main} />\n\t\t\t\t<Project id={VIEWS.project} />\n\t\t\t\t<ProjectDetail id={VIEWS.projectDetail} />\n\t\t\t\t<Partials id={VIEWS.partials} />\n\t\t\t\t<CheckList id={VIEWS.checkList} />\n\t\t\t\t<Form id={VIEWS.form} />\n\t\t\t\t<ProjectDetailOnly id={VIEWS.projectDetailOnly} />\n\t\t\t</View>\n\t\t\t<Alert />\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from './vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}