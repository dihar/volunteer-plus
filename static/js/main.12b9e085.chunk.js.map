{"version":3,"sources":["img/persik.png","vk-connect.js","constants.js","panels/Catalog.js","panels/MyProjects.js","components/TabsPanel.js","App.js","index.js"],"names":["module","exports","extendedConnect","connect","eventsHeap","connectMock","sendPromise","method","params","Promise","resolve","send","subscribe","eventData","detail","type","data","endsWith","replace","undefined","TABS","Catalog","id","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","MyProjects","className","persik","alt","TabsPanel","activePanel","setActivePanel","vertical","theme","onClick","selected","App","useState","setUser","size","popout","setPopout","useEffect","a","user","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.12b9e085.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import connect from '@vkontakte/vk-connect';\nimport connectMock from '@vkontakte/vkui-connect-mock';\n\nconst isMock = true;\n\nlet extendedConnect = connect;\nconst eventsHeap = {};\n\nconst subscriber = (eventData) => {\n    const { detail } = eventData;\n    const { type, data } = detail;\n\n    if (type && type.endsWith('Result')) {\n        const method = type.replace(/Result$/, '');\n\n        if (eventsHeap[method]) {\n            eventsHeap[method](data);\n            eventsHeap[method] = undefined;\n        }\n    }\n};\n\nif (isMock) {\n    extendedConnect = {\n        ...connectMock,\n        sendPromise: function(method, params) {\n            return new Promise((resolve) => {\n                eventsHeap[method] = resolve;\n                extendedConnect.send(method, params);\n            });\n        }\n    }\n\n    extendedConnect.subscribe(subscriber);\n} else {\n    extendedConnect = connect;\n}\n\nexport default extendedConnect;\n","export const TABS = {\n    catalog: 'catalog',\n    myProject: 'myProject',\n    profile: 'profile'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Catalog = ({ id, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\t\tjshdbfkds fskjn\n\t</Panel>\n);\n\nCatalog.propTypes = {\n\tgo: PropTypes.func.isRequired,\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Catalog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport persik from '../img/persik.png';\nimport './MyProjects.css';\n\nconst MyProjects = ({ id }) => (\n\t<Panel id={id}>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nMyProjects.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default MyProjects;\n","import React from 'react';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport { TABS } from '../constants';\n\n\nexport const TabsPanel = ({ id, activePanel, setActivePanel }) => (\n    <FixedLayout vertical=\"top\">\n        <Tabs theme=\"header\" type=\"buttons\">\n            <HorizontalScroll>\n                <TabsItem\n                    onClick={() => setActivePanel(TABS.catalog)}\n                    selected={activePanel === TABS.catalog}\n                >\n                    Каталог\n                </TabsItem>\n                <TabsItem\n                    onClick={() => setActivePanel(TABS.myProject)}\n                    selected={activePanel === TABS.myProject}\n                >\n                    Мои проекты\n                </TabsItem>\n                <TabsItem\n                    onClick={() => setActivePanel(TABS.profile)}\n                    selected={activePanel === TABS.profile}\n                >\n                    Профиль\n                </TabsItem>\n            </HorizontalScroll>\n        </Tabs>\n    </FixedLayout>\n);\n","import React, { useState, useEffect, Fragment } from 'react';\nimport connect from './vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { TABS } from './constants';\nimport Catalog from './panels/Catalog';\nimport MyProjects from './panels/MyProjects';\nimport { TabsPanel } from './components/TabsPanel';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(TABS.catalog);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<TabsPanel activePanel={activePanel} setActivePanel={setActivePanel} />\n\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t<Catalog id={TABS.catalog} fetchedUser={fetchedUser} go={go} />\n\t\t\t\t<MyProjects id={TABS.myProject} go={go} />\n\t\t\t</View>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from './vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}